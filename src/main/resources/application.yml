spring:
  profiles: prod
  datasource:
    url:  jdbc:mysql://${DB_HOST:localhost}:${DB_PORT:3306}/auth?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false
    username: ${DB_USERNAME:root}
    password: ${DB_PASSWORD:temppassword}
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect
  security:
    oauth2:
      client:
        registration:
          google:
            clientId:
            clientSecret:
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - email
              - profile
        #          facebook:
        #            clientId:
        #            clientSecret:
        #            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}" # Note that facebook now mandates the use of https redirect URIs, so make sure your app supports https in production
        #            scope:
        #              - email
        #              - public_profile
        #          github:
        #            clientId:
        #            clientSecret:
        #            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
        #            scope:
        #              - user:email
        #              - read:user
        provider:
          facebook:
            authorizationUri: https://www.facebook.com/v3.0/dialog/oauth
            tokenUri: https://graph.facebook.com/v3.0/oauth/access_token
            userInfoUri: https://graph.facebook.com/v3.0/me?fields=id,first_name,middle_name,last_name,name,email,verified,is_verified,picture.width(250).height(250)
app:
  auth:
    tokenSecret: ${USER_TOKEN_SECRET}
    tokenExpirationMsec: ${USER_TOKEN_EXPIRATION_MSEC}
  oauth2:
    # After successfully authenticating with the OAuth2 Provider,
    # we'll be generating an auth token for the user and sending the token to the
    # redirectUri mentioned by the frontend client in the /oauth2/authorize request.
    # We're not using cookies because they won't work well in mobile clients.
    authorizedRedirectUris:
      - http://localhost:4000/oauth2/redirect
      - myandroidapp://oauth2/redirect
      - myiosapp://oauth2/redirect
eureka:
  client:
    serviceUrl:
      defaultZone: http://${EUREKA_SERVICE_HOST:localhost}:${EUREKA_SERVICE_PORT:8761}/eureka/eureka/
  instance:
    preferIpAddress: false
    hostname: ${AUTH_SERVICE_HOST:localhost}